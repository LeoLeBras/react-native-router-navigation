// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TabStack /> should re render correctly when new tabs are provided 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should re render correctly when new tabs are provided 2`] = `
<Text>
  Hello
</Text>
`;

exports[`<TabStack /> should re-render correctly when "go" action is called 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should re-render correctly when "go" action is called 2`] = `
<Text>
  Hello
</Text>
`;

exports[`<TabStack /> should re-render correctly when "goBack" action is called 1`] = `
<Text>
  Goodbye
</Text>
`;

exports[`<TabStack /> should re-render correctly when "goBack" action is called 2`] = `
<Text>
  Hello
</Text>
`;

exports[`<TabStack /> should re-render correctly when "onIndexChange" action is called with index arg 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should re-render correctly when "onIndexChange" action is called with index arg 2`] = `null`;

exports[`<TabStack /> should re-render correctly when "onIndexChange" action is called with index arg and initialPath prop 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should re-render correctly when "onIndexChange" action is called with index arg and initialPath prop 2`] = `null`;

exports[`<TabStack /> should re-render correctly when "onIndexChange" action is called with route arg 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should re-render correctly when "onIndexChange" action is called with route arg 2`] = `null`;

exports[`<TabStack /> should re-render correctly when "push" action is called 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should re-render correctly when "push" action is called 2`] = `
<Text>
  Hello
</Text>
`;

exports[`<TabStack /> should re-render correctly when "replace" action is called 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should re-render correctly when "replace" action is called 2`] = `
<Text>
  Hello
</Text>
`;

exports[`<TabStack /> should re-render correctly when "replace" action is called with routePath prop 1`] = `
<Text>
  {"language":"en"}
</Text>
`;

exports[`<TabStack /> should re-render correctly when "replace" action is called with routePath prop 2`] = `
<Text>
  {"language":"fr"}
</Text>
`;

exports[`<TabStack /> should render correctly 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should render correctly with initialIndex and initialEntries props  1`] = `
<Text>
  Hello
</Text>
`;

exports[`<TabStack /> should reset tab by calling history.go function 1`] = `
<Text>
  Index
</Text>
`;

exports[`<TabStack /> should reset tab by calling history.go function 2`] = `
<Text>
  {"name":"goodbye"}
</Text>
`;

exports[`<TabStack /> should reset tab by calling history.replace function with initialPath prop 1`] = `
<Text>
  {"name":"goodbye"}
</Text>
`;

exports[`<TabStack /> should reset tab by calling history.replace function with initialPath prop 2`] = `
<Text>
  {"name":"goodbye"}
</Text>
`;

exports[`<TabStack /> should reset tab by calling history.replace function with path prop 1`] = `
<Text>
  Goodbye
</Text>
`;

exports[`<TabStack /> should reset tab by calling history.replace function with path prop 2`] = `
<Text>
  Goodbye
</Text>
`;

exports[`<TabStack /> should reset tab by calling onReset prop function 1`] = `
<Text>
  Goodbye
</Text>
`;

exports[`<TabStack /> should reset tab by calling onReset prop function 2`] = `
<Text>
  Goodbye
</Text>
`;
